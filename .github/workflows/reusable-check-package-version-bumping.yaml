# reusable-check-package-version-bumping.yaml
name: Check if a package version is bumped

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Directory where the application is located'
        required: false
        default: '.'
        type: string
    outputs:
      current-version:
        description: "Current version of the package"
        value: ${{ jobs.check-version.outputs.current-version }}

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.compare_versions.outputs.current-version }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: main
          path: main_branch

      - name: Compare and set versions
        id: compare_versions
        run: |
          if [ ! -f "src/pyproject.toml" ]; then
            echo "::error ::src/pyproject.toml file not found in the current branch"
            exit 1
          fi

          if [ ! -f "main_branch/src/pyproject.toml" ]; then
            if [ -f "main_branch/pyproject.toml" ]; then
              main_version=$(grep "^version" main_branch/pyproject.toml | head -n 1 | cut -d '"' -f 2)
            else
              echo "::error ::Neither src/pyproject.toml nor root-level pyproject.toml found in main branch"
              exit 1
            fi
          else
            main_version=$(grep "^version" main_branch/src/pyproject.toml | head -n 1 | cut -d '"' -f 2)
          fi

          current_version=$(grep "^version" src/pyproject.toml | head -n 1 | cut -d '"' -f 2)

          echo "Current branch version: $current_version"
          echo "Main branch version: $main_version"

          # Set the job outputs
          echo "current-version=$current_version" >> $GITHUB_OUTPUT
          echo "main-version=$main_version" >> $GITHUB_OUTPUT

          if [ "$current_version" = "$main_version" ]; then
            echo "::error ::Version $current_version is equal to $main_version, Bump the version in pyproject.toml"
            exit 1
          elif [ "$current_version" \< "$main_version" ]; then
            echo "::error ::Version $current_version is less than $main_version, Bump the version in pyproject.toml"
            exit 1
          else
            echo "::notice ::Version $current_version is greater than $main_version"
          fi
