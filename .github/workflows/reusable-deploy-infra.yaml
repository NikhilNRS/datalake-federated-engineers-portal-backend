# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Deploy Infrastructure component to respective stage

on:
  workflow_call:
    inputs:
      package-path:
        description: Path of the Infra component to be deployed
        required: true
        type: string
      environment:
        description: Name of the environment
        required: true
        type: string
      stage:
        description: Name of the stage
        required: true
        type: string

jobs:
  deploy:
    name: Deploy ${{ inputs.package-path}} to ${{ inputs.environment }} environment
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write 
      contents: read

    defaults:
      run:
        working-directory: ${{ inputs.package-path}}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-fde-backend-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-fde-backend-

      - name: Authenticate with Artifactory NPM Virtual
        uses: Postnl-Production/lpe-private-actions/lpe-jfrog-npm-auth@v5
        with:
          npm-repo-name: postnl-data-lake-npm-dev-virtual
          oidc: true

      - name: Install Node.js modules and dependencies
        run: npm ci

      - name: Configure AWS Credentials
        uses: Postnl-Production/lpe-private-actions/lpe-aws-deploy@v5
        with:
          target-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          deployment-account-id: ${{ secrets.DEPLOY_AWS_ACCOUNT }}
          deployment-role-name: lpe-oidc-${{ github.event.repository.name }} 

      - name: Run CDK assertions (only in dev stage)
        run: npm test
        if: ${{ inputs.stage == 'dev' }}
        env:
          STAGE: ${{ inputs.stage }}

      - name: CDK diff
        run: npx cdk diff --context stage=${{ inputs.stage }}

      - name: CDK deployment
        run: >
          npx cdk deploy
          --all
          --context stage=${{ inputs.stage }}
          --method change-set
          --require-approval never
          --verbose
