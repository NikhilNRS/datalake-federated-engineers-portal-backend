name: Entrypoint feature
run-name: Entrypoint feature by @${{ github.actor }}

on:
  pull_request:
    branches: [main]

jobs:
  run-mypy-and-pytest:
    name: Run mypy and pytest
    uses: ./.github/workflows/reusable-test-poetry-package.yaml
    with:
      working-directory: src
    secrets: inherit

  get-files-with-changes:
    name: Get Files with changes
    uses: ./.github/workflows/reusable-get-files-with-changes.yaml
    with:
      working-directory: src

  check-if-application-version-is-bumped:
    name: Check if the application files have changed and version is bumped
    needs: get-files-with-changes
    if: needs.get-files-with-changes.outputs.changed-files != '[]'
    uses: ./.github/workflows/reusable-check-package-version-bumping.yaml
    with:
      working-directory: src
    secrets: inherit

  deploy-infra-to-dev:
    name: Deploy Cognito Infrastructure to Development
    needs: [get-files-with-changes, run-mypy-and-pytest, check-if-application-version-is-bumped]
    if: needs.get-files-with-changes.outputs.changed-files != '[]' &&
      !failure() &&
      !cancelled()
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write 
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Caching
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-fde-backend-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-cache-fde-backend-

      - name: Install Node.js modules and dependencies
        run: npm ci
        working-directory: infra/federated-engineers-portal

      - name: Configure AWS Credentials
        uses: Postnl-Production/lpe-private-actions/lpe-aws-deploy@v5
        with:
          target-account-id: ${{ secrets.AWS_ACCOUNT_ID }}
          deployment-account-id: ${{ secrets.DEPLOY_AWS_ACCOUNT }}
          deployment-role-name: lpe-oidc-${{ github.event.repository.name }}

      - name: Run CDK assertions (only in dev stage)
        run: npm test
        if: ${{ inputs.stage == 'dev' }}
        working-directory: infra/federated-engineers-portal
        env:
          STAGE: ${{ inputs.stage }}

      - name: CDK diff
        run: npx cdk diff --context stage=dev
        working-directory: infra/federated-engineers-portal

      - name: CDK deployment
        run: |
          npx cdk deploy \
          --all \
          --context stage=dev \
          --method change-set \
          --require-approval never \
          --verbose
        working-directory: infra/federated-engineers-portal
